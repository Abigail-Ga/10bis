<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="2" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="54938" started-at="2021-05-13T18:30:17 IDT" finished-at="2021-05-13T18:31:11 IDT">
    <groups>
    </groups>
    <test name="Default test" duration-ms="54938" started-at="2021-05-13T18:30:17 IDT" finished-at="2021-05-13T18:31:11 IDT">
      <class name="tests.OrderErrorMessageTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:tests.OrderErrorMessageTest@7113b13f]" name="beforeClass" is-config="true" duration-ms="12903" started-at="2021-05-13T18:30:17 IDT" finished-at="2021-05-13T18:30:29 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.OrderErrorMessageTest@7113b13f]" name="beforeMethod" is-config="true" duration-ms="6" started-at="2021-05-13T18:30:29 IDT" finished-at="2021-05-13T18:30:30 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.OrderErrorMessageTest.LoginUsingFacebook() throws java.lang.InterruptedException,java.io.IOException,javax.xml.parsers.ParserConfigurationException,org.xml.sax.SAXException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="LoginUsingFacebook()[pri:1, instance:tests.OrderErrorMessageTest@7113b13f]" name="LoginUsingFacebook" duration-ms="15854" started-at="2021-05-13T18:30:30 IDT" description="Login 10bis using Facebook" finished-at="2021-05-13T18:30:45 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginUsingFacebook -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.OrderErrorMessageTest@7113b13f]" name="afterMethod" is-config="true" duration-ms="269" started-at="2021-05-13T18:30:45 IDT" finished-at="2021-05-13T18:30:46 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginUsingFacebook status=SUCCESS method=OrderErrorMessageTest.LoginUsingFacebook()[pri:1, instance:tests.OrderErrorMessageTest@7113b13f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.OrderErrorMessageTest@7113b13f]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-05-13T18:30:46 IDT" finished-at="2021-05-13T18:30:46 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.OrderErrorMessageTest.minimumOrderErrorMsg() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="minimumOrderErrorMsg()[pri:2, instance:tests.OrderErrorMessageTest@7113b13f]" name="minimumOrderErrorMsg" duration-ms="24777" started-at="2021-05-13T18:30:46 IDT" description="Verify minimum order error message" finished-at="2021-05-13T18:31:10 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- minimumOrderErrorMsg -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.OrderErrorMessageTest@7113b13f]" name="afterMethod" is-config="true" duration-ms="103" started-at="2021-05-13T18:31:10 IDT" finished-at="2021-05-13T18:31:11 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=minimumOrderErrorMsg status=SUCCESS method=OrderErrorMessageTest.minimumOrderErrorMsg()[pri:2, instance:tests.OrderErrorMessageTest@7113b13f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:tests.OrderErrorMessageTest@7113b13f]" name="afterClass" is-config="true" duration-ms="986" started-at="2021-05-13T18:31:11 IDT" finished-at="2021-05-13T18:31:11 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- tests.OrderErrorMessageTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
